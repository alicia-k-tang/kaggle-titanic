#Now, we will build our predictive model!

#We will create our own column to combine data together.
titanic.train$IsTrainSet <- TRUE
titanic.test$IsTrainSet <- FALSE
titanic.test$Survived <- NA

#We proceed by creating a row bind.
titanic.full <- rbind(titanic.train, titanic.test)

Using the mode, we must clean and fill in the 2 missing values from Embarked.
#titanic.full[titanic.full$Embarked=='', "Embarked"] <- 'S'
table(titanic.full$Embarked)

#To impute the missing Age values we use the median.
age.median <- median(titanic.full$Age, na.rm= TRUE)
titanic.full[is.na(titanic.full$Age),"Age"] <- age.median 

#Lastly, we must fill in the empty values in Fare. We do this by using the median again.
fare.median <- median(titanic.full$Fare, na.rm = TRUE)
titanic.full[is.na(titanic.full$Fare),"Fare"] <- fare.median 

#Next, we must conduct categorical casting. We have to cast everything except for Survived right now. If we categorized Survived, there would be 3 columns including NA which is not what we want. 
#We must categorize these variables because these variables are integers right now, but they are actually categorical variables.
titanic.full$Pclass <- as.factor(titanic.full$Pclass)
titanic.full$Sex <- as.factor(titanic.full$Sex)
titanic.full$Embarked <- as.factor(titanic.full$Embarked)

#We now split the dataset back out into train and get ready to test.
titanic.train <- titanic.full[titanic.full$IsTrainSet == TRUE,]
titanic.test <- titanic.full[titanic.full$IsTrainSet == FALSE,]

#But before anything, we have to remember to cast Survived into a category.
titanic.train$Survived <- as.factor(titanic.train$Survived)

#Next, we create an survived equation. This will tell us which columns we would want to build our predictive model on.
survived.equation <- "Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
survived.formula <- as.formula(survived.equation)

#Loading the randomForest package.
library("randomForest")

#Now we are finally able to create the predictive model like such.
titanic.model <- randomForest(formula = survived.formula, data = titanic.train, ntree = 500, mtry = 3, nodeside = 0.01 *nrow(titanic.test))
features.equation <- "Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
Survived <- predict(titanic.model, newdata = titanic.test)

#We proceed by building a dataframe to write it out as a CSV for Kaggle.
PassengerId <- titanic.test$PassengerId
output.df <- as.data.frame(PassengerId)
output.df$Survived <- Survived

#Lastly we must use the write.csv function to save and submit to Kaggle for the competition.
write.csv(output.df, file= "kaggle_titanic.csv", row.names = FALSE)

#After submitting this on Kaggle, this model received a 0.772. Limitations and ways to improve the model are listed in the README file or the "Titanic Kaggle Competition" pdf of this repo. 
